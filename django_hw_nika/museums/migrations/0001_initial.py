# Generated by Django 4.2.1 on 2024-05-07 01:01

from django.db import migrations, models
import django.db.models.deletion
import museums.models
import museums.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "street",
                    models.CharField(
                        max_length=255,
                        validators=[museums.validators.street_name_validator],
                        verbose_name="street name",
                    ),
                ),
                (
                    "house_number",
                    models.CharField(
                        max_length=8,
                        validators=[museums.validators.house_number_validator],
                        verbose_name="house number",
                    ),
                ),
                (
                    "entrance_number",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="entrance number"
                    ),
                ),
                (
                    "floor",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="floor number"
                    ),
                ),
                (
                    "flat_number",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="flat number"
                    ),
                ),
            ],
            options={
                "verbose_name": "address",
                "verbose_name_plural": "addresses",
                "db_table": '"museum_data"."address"',
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="country")),
            ],
            options={
                "verbose_name": "country",
                "verbose_name_plural": "countries",
                "db_table": '"museum_data"."country"',
            },
        ),
        migrations.CreateModel(
            name="Guide",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=museums.models.get_datetime,
                        null=True,
                        validators=[museums.models.check_created],
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=museums.models.get_datetime,
                        null=True,
                        validators=[museums.models.check_modified],
                        verbose_name="modified",
                    ),
                ),
                (
                    "firstname",
                    models.TextField(max_length=80, verbose_name="first name"),
                ),
                ("lastname", models.TextField(max_length=80, verbose_name="last name")),
                ("birthday", models.DateField(verbose_name="birthday")),
            ],
            options={
                "verbose_name": "guide",
                "verbose_name_plural": "guides",
                "db_table": '"museum_data"."guide"',
            },
        ),
        migrations.CreateModel(
            name="Museum",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=museums.models.get_datetime,
                        null=True,
                        validators=[museums.models.check_created],
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=museums.models.get_datetime,
                        null=True,
                        validators=[museums.models.check_modified],
                        verbose_name="modified",
                    ),
                ),
                ("title", models.TextField(max_length=255, verbose_name="title")),
                ("rating", models.FloatField(verbose_name="rating")),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="museums.address",
                    ),
                ),
            ],
            options={
                "verbose_name": "museum",
                "verbose_name_plural": "museums",
                "db_table": '"museum_data"."museum"',
                "unique_together": {("title", "address")},
            },
        ),
        migrations.CreateModel(
            name="Exhibition",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=museums.models.get_datetime,
                        null=True,
                        validators=[museums.models.check_created],
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=museums.models.get_datetime,
                        null=True,
                        validators=[museums.models.check_modified],
                        verbose_name="modified",
                    ),
                ),
                (
                    "theme",
                    models.TextField(max_length=255, unique=True, verbose_name="theme"),
                ),
                ("floor", models.IntegerField(verbose_name="floor")),
                ("info", models.TextField(verbose_name="information")),
                (
                    "museum",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="museums.museum"
                    ),
                ),
            ],
            options={
                "verbose_name": "exhibition",
                "verbose_name_plural": "exhibitions",
                "db_table": '"museum_data"."exhibition"',
            },
        ),
        migrations.CreateModel(
            name="Exhibit",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=museums.models.get_datetime,
                        null=True,
                        validators=[museums.models.check_created],
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=museums.models.get_datetime,
                        null=True,
                        validators=[museums.models.check_modified],
                        verbose_name="modified",
                    ),
                ),
                (
                    "title",
                    models.TextField(max_length=255, unique=True, verbose_name="title"),
                ),
                ("info", models.TextField(verbose_name="information")),
                ("era", models.IntegerField(verbose_name="era")),
                (
                    "exposition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="museums.exhibition",
                    ),
                ),
            ],
            options={
                "verbose_name": "exhibit",
                "verbose_name_plural": "exhibits",
                "db_table": '"museum_data"."exhibit"',
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=80, verbose_name="name")),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="museums.country",
                        verbose_name="country",
                    ),
                ),
            ],
            options={
                "verbose_name": "city",
                "verbose_name_plural": "cities",
                "db_table": '"museum_data"."city"',
                "unique_together": {("name", "country")},
            },
        ),
        migrations.AddField(
            model_name="address",
            name="city",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="museums.city",
                verbose_name="city",
            ),
        ),
        migrations.CreateModel(
            name="MuseumGuide",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "guide",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="museums.guide"
                    ),
                ),
                (
                    "museum",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="museums.museum"
                    ),
                ),
            ],
            options={
                "verbose_name": "museum guide",
                "verbose_name_plural": "museum guides",
                "db_table": '"museum_data"."museum_guide"',
                "unique_together": {("museum", "guide")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="address",
            unique_together={
                (
                    "city",
                    "street",
                    "house_number",
                    "entrance_number",
                    "floor",
                    "flat_number",
                )
            },
        ),
    ]
